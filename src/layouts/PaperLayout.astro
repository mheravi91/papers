---
import BaseLayout from './BaseLayout.astro';
import type { CollectionEntry } from 'astro:content';

const { entry } = Astro.props as { entry: CollectionEntry<'papers'> };
const { data } = entry;
const {
  title,
  summary,
  venue,
  year,
  authors,
  tags = [],
  doi,
  links = [],
  heroMedia,
} = data;

const { Content } = await entry.render();
const [primaryLink, ...secondaryLinks] = links;
const actionLinks = [primaryLink, ...secondaryLinks].filter(Boolean);
const eyebrow = [venue, year && `${year}`].filter(Boolean).join(' · ');
const hasMeta = Boolean(venue || year || doi);

const structuredData = {
  '@context': 'https://schema.org',
  '@type': 'ScholarlyArticle',
  headline: title,
  name: title,
  author: authors.map((name) => ({ '@type': 'Person', name })),
  description: summary,
  datePublished: year ? `${year}` : undefined,
  url: `https://papers.mheravi.ir/papers/${entry.slug}/`,
  identifier: doi
    ? [{
        '@type': 'PropertyValue',
        propertyID: 'DOI',
        value: doi,
        url: `https://doi.org/${doi}`,
      }]
    : undefined,
  isPartOf: venue
    ? {
        '@type': 'PublicationVolume',
        name: venue,
      }
    : undefined,
};
---
<BaseLayout
  title={`${title} — Mohammad Heravi`}
  description={summary}
  canonical={`https://papers.mheravi.ir/papers/${entry.slug}/`}
  structuredData={structuredData}
>
  <main class="page-main page-main--article">
    <section class="paper-header">
      <div class="paper-header-inner">
        <div class="paper-header-meta">
          {eyebrow && <span class="paper-eyebrow">{eyebrow}</span>}
          <h1 class="paper-title">{title}</h1>
          {authors.length > 0 && (
            <ul class="paper-authors">
              {authors.map((author) => (
                <li>{author}</li>
              ))}
            </ul>
          )}
          <p class="paper-summary">{summary}</p>
          {actionLinks.length > 0 && (
            <div class="paper-actions">
              {actionLinks.map((link) => (
                <a
                  class={`paper-action ${link === primaryLink ? 'paper-action--primary' : ''}`}
                  href={link.url}
                  target={link.external !== false ? '_blank' : undefined}
                  rel={link.external !== false ? 'noopener' : undefined}
                >
                  {link.label}
                </a>
              ))}
            </div>
          )}
          {tags.length > 0 && (
            <ul class="paper-tags">
              {tags.map((tag) => (
                <li>{tag}</li>
              ))}
            </ul>
          )}
        </div>
        {heroMedia ? (
          <figure class="paper-hero-media">
            <img src={heroMedia.src} alt={heroMedia.alt ?? `${title} preview media`} loading="lazy" />
            {heroMedia.caption && <figcaption>{heroMedia.caption}</figcaption>}
          </figure>
        ) : (
          <div class="paper-hero-media paper-hero-media--placeholder">
            <span>Preview media coming soon</span>
          </div>
        )}
      </div>
    </section>

    {hasMeta && (
      <section class="paper-meta">
        {venue && (
          <div class="paper-meta-card">
            <span class="paper-meta-label">Venue</span>
            <span class="paper-meta-value">{venue}</span>
          </div>
        )}
        {year && (
          <div class="paper-meta-card">
            <span class="paper-meta-label">Year</span>
            <span class="paper-meta-value">{year}</span>
          </div>
        )}
        {doi && (
          <div class="paper-meta-card">
            <span class="paper-meta-label">DOI</span>
            <a class="paper-meta-value" href={`https://doi.org/${doi}`} target="_blank" rel="noopener">{doi}</a>
          </div>
        )}
      </section>
    )}

    <section class="paper-body rich-text">
      <Content />
    </section>
  </main>
</BaseLayout>
