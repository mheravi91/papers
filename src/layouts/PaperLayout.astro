---
import BaseLayout from './BaseLayout.astro';
import type { CollectionEntry } from 'astro:content';

const { entry } = Astro.props as { entry: CollectionEntry<'papers'> };
const { data } = entry;
const {
  title,
  summary,
  venue,
  year,
  authors,
  tags = [],
  doi,
  links = [],
  heroMedia,
} = data;

const { Content } = await entry.render();
const [primaryLink, ...secondaryLinks] = links;

const structuredData = {
  '@context': 'https://schema.org',
  '@type': 'ScholarlyArticle',
  headline: title,
  name: title,
  author: authors.map((name) => ({ '@type': 'Person', name })),
  description: summary,
  datePublished: year ? `${year}` : undefined,
  url: `https://papers.mheravi.ir/papers/${entry.slug}/`,
  identifier: doi
    ? [{
        '@type': 'PropertyValue',
        propertyID: 'DOI',
        value: doi,
        url: `https://doi.org/${doi}`,
      }]
    : undefined,
  isPartOf: venue
    ? {
        '@type': 'PublicationVolume',
        name: venue,
      }
    : undefined,
};
---
<BaseLayout
  title={`${title} â€” Mohammad Heravi`}
  description={summary}
  canonical={`https://papers.mheravi.ir/papers/${entry.slug}/`}
  structuredData={structuredData}
>
  <main class="page-main page-main--article">
    <section class="paper-hero">
      <div class="paper-hero-main">
        <span class="section-heading">Scholarly work</span>
        <h1>{title}</h1>
        {heroMedia ? (
          <figure class="paper-hero-media">
            <img src={heroMedia.src} alt={heroMedia.alt ?? `${title} preview media`} loading="lazy" />
            {heroMedia.caption && <figcaption>{heroMedia.caption}</figcaption>}
          </figure>
        ) : (
          <div class="paper-hero-media paper-hero-media--placeholder">
            <span>Preview media coming soon</span>
          </div>
        )}
        <ul class="paper-authors">
          {authors.map((author) => (
            <li>{author}</li>
          ))}
        </ul>
        <p class="paper-summary">{summary}</p>
        {tags.length > 0 && (
          <div class="featured-links">
            {tags.map((tag) => (
              <span>{tag}</span>
            ))}
          </div>
        )}
      </div>
      <aside class="paper-hero-meta">
        <dl class="paper-meta-list">
          <div class="paper-meta-row">
            <dt>Venue</dt>
            <dd>{venue}</dd>
          </div>
          <div class="paper-meta-row">
            <dt>Year</dt>
            <dd>{year}</dd>
          </div>
          {doi && (
            <div class="paper-meta-row">
              <dt>DOI</dt>
              <dd><a href={`https://doi.org/${doi}`} target="_blank" rel="noopener">{doi}</a></dd>
            </div>
          )}
          {links.length > 0 && (
            <div class="paper-meta-row paper-meta-links">
              <dt>Access</dt>
              <dd>
                <div class="paper-links">
                  {[primaryLink, ...secondaryLinks].filter(Boolean).map((link) => (
                    <a class={`paper-link ${link === primaryLink ? 'paper-link--primary' : ''}`} href={link.url} target={link.external !== false ? '_blank' : undefined} rel={link.external !== false ? 'noopener' : undefined}>
                      {link.label}
                    </a>
                  ))}
                </div>
              </dd>
            </div>
          )}
        </dl>
      </aside>
    </section>

    <section class="rich-text">
      <Content />
    </section>
  </main>
</BaseLayout>
